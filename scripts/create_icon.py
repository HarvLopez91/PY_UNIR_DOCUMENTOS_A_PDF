#!/usr/bin/env python3
"""
Script para convertir LogoLApng-1920w.webp a icon.ico para usar como icono de aplicaci√≥n
"""
from PIL import Image
from pathlib import Path

def crear_icono():
    """Convierte el logo de La Ascensi√≥n a formato .ico para icono de aplicaci√≥n"""
    
    assets_dir = Path("assets")
    logo_path = assets_dir / "LogoLApng-1920w.webp"
    icon_path = assets_dir / "icon.ico"
    
    if not logo_path.exists():
        print(f"‚ùå Error: No se encuentra {logo_path}")
        return False
    
    try:
        # Cargar la imagen webp
        img = Image.open(logo_path)
        print(f"üìÇ Cargando imagen: {img.size[0]}x{img.size[1]} px")
        
        # Convertir a RGBA para mantener transparencia
        if img.mode != 'RGBA':
            img = img.convert('RGBA')
        
        # Crear icono con m√∫ltiples tama√±os para mejor compatibilidad
        sizes = [16, 32, 48, 64, 128, 256]
        icon_images = []
        
        for size in sizes:
            # Redimensionar manteniendo proporciones
            img_resized = img.resize((size, size), Image.Resampling.LANCZOS)
            icon_images.append(img_resized)
            print(f"‚úÖ Creado tama√±o: {size}x{size}")
        
        # Guardar como .ico con m√∫ltiples tama√±os
        icon_images[0].save(
            icon_path,
            format='ICO',
            sizes=[(img.size[0], img.size[1]) for img in icon_images],
            append_images=icon_images[1:]
        )
        
        print(f"üéØ Icono creado exitosamente: {icon_path}")
        print(f"üìè Tama√±os incluidos: {', '.join(f'{s}x{s}' for s in sizes)}")
        return True
        
    except Exception as e:
        print(f"‚ùå Error al crear icono: {e}")
        return False

if __name__ == "__main__":
    print("üîß Generador de Icono - PDF Consolidator")
    print("=" * 50)
    
    if crear_icono():
        print("\n‚úÖ Proceso completado exitosamente")
    else:
        print("\n‚ùå Error en el proceso")